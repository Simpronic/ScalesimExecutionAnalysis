# -*- coding: utf-8 -*-
"""AnalisiStatistica_ScaleSimReport.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uKKSviyITjEOyKtghf2alhTxamvXYjlE

Analisi statistica tra i file report dei due scalesim
"""

import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import numpy as np

def q_q_plot(data):
    stats.probplot(data, dist="norm", plot=plt)
    plt.title("Q-Q Plot")
    plt.show()

df1 = pd.read_csv('COMPUTE_REPORT.csv')
df2 = pd.read_csv('FasterRCNN_cycles.csv')
util1 = df1[' Overall Util %']
util2 = df2['\t% Utilization']
q_q_plot(util1)
q_q_plot(util2)

statistic, p_value = stats.mannwhitneyu(util1, util2)
#statistic, p_value = stats.ttest_ind(util1, util2)
print(statistic,p_value)
if p_value < 0.05:
    print("Le medie sono significativamente differenti")
else:
    print("Le medie non sono significativamente differenti")

cycles1 = df1[' Total Cycles']
cycles2 = df2['\tCycles']
q_q_plot(cycles1)
q_q_plot(cycles2)
statistic, p_value = stats.ttest_ind(cycles1, cycles2)
print(statistic,p_value)
if p_value < 0.05:
    print("Le medie sono significativamente differenti")
else:
    print("Le medie non sono significativamente differenti")

df1 = pd.read_csv('BANDWIDTH_REPORT.csv')
df2 = pd.read_csv('FasterRCNN_avg_bw.csv')

dram_ifmap_reads = df1[' Avg IFMAP DRAM BW']
dram_ifmap_reads2 = df2['\tDRAM IFMAP Read BW']

q_q_plot(dram_ifmap_reads)
q_q_plot(dram_ifmap_reads2)

statistic, p_value = stats.mannwhitneyu(dram_ifmap_reads, dram_ifmap_reads2)
#statistic, p_value = stats.ttest_ind(dram_ifmap_reads, dram_ifmap_reads2)


print(statistic,p_value)
if p_value < 0.05:
    print("Le medie sono significativamente differenti")
else:
    print("Le medie non sono significativamente differenti")

dram_ofmap_writes = df1[' Avg OFMAP DRAM BW']
dram_ofmap_writes2 = df2['\tDRAM OFMAP Write BW']

q_q_plot(dram_ofmap_writes)
q_q_plot(dram_ofmap_writes2)

statistic, p_value = stats.mannwhitneyu(dram_ofmap_writes, dram_ofmap_writes2)
#statistic, p_value = stats.ttest_ind(dram_ofmap_writes, dram_ofmap_writes2)
print(statistic,p_value)
if p_value < 0.05:
    print("Le medie sono significativamente differenti")
else:
    print("Le medie non sono significativamente differenti")

dram_filter_reads = df1[' Avg FILTER DRAM BW']
dram_filter_reads2 = df2['\tDRAM Filter Read BW']

q_q_plot(dram_filter_reads)
q_q_plot(dram_filter_reads2)

t_stat, p_value = stats.ttest_ind(dram_filter_reads, dram_filter_reads2)
print(t_stat,p_value)
if p_value < 0.05:
    print("Le medie sono significativamente differenti")
else:
    print("Le medie non sono significativamente differenti")